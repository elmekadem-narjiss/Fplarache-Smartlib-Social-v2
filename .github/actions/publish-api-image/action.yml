name: 'Publish Spring Boot Docker Image'
description: 'Build and push Docker image for Spring Boot app'

inputs:
  spring-profile:
    description: 'Spring profile to be used (e.g., dev, prod)'
    required: true
  published-app:
    description: 'Path to the Spring Boot JAR or WAR file'
    required: true
  dockerfile:
    description: 'Path to the Dockerfile'
    required: true
  image-short-name:
    description: 'Short name for the Docker image'
    required: true
  image-prefix:
    description: 'Prefix for the image name'
    required: true
  image-tag:
    description: 'Tag for the image'
    required: true
  ecr-registry:
    description: 'ECR registry URL'
    required: true

outputs:
  image-uri:
    description: 'URI of the pushed Docker image'

runs:
  using: "composite"
  steps:
    - name: Build and Push Docker Image
      shell: bash
      run: |
        # Define the image name
        export IMAGENAME="${{ inputs.ecr-registry }}/${{ inputs.image-prefix }}-${{ inputs.image-short-name }}"

        # Debugging: Print the generated image name
        echo "Generated IMAGENAME: $IMAGENAME"

        # Build the Docker image
        echo "Building Docker image..."
        docker build --build-arg SPRING_PROFILE_ARG="${{ inputs.spring-profile }}" -f "${{ inputs.dockerfile }}" -t "$IMAGENAME:${{ inputs.image-tag }}" .

        # Tag the Docker image
        echo "Tagging Docker image..."
        docker image tag "$IMAGENAME:${{ inputs.image-tag }}" "$IMAGENAME:latest"

        # Push the Docker image
        echo "Pushing Docker image..."
        docker push "$IMAGENAME:${{ inputs.image-tag }}"
        docker push "$IMAGENAME:latest"

        # Output the image URI
        echo "image-uri=${IMAGENAME}:latest" >> $GITHUB_ENV

