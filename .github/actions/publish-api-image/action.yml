name: 'Publish API Image'
description: 'Construire et publier une image Docker sur ECR'

inputs:
  spring-profile:
    description: 'Le profil de Spring à utiliser (ex : prod)'
    required: true
  published-app:
    description: 'Le chemin vers le fichier JAR publié de l’application'
    required: true
  dockerfile:
    description: 'Le chemin du Dockerfile'
    required: true
  image-short-name:
    description: 'Le nom court de l’image Docker'
    required: true
  image-prefix:
    description: 'Le préfixe de l’image Docker (souvent le nom du projet)'
    required: true
  image-tag:
    description: 'Le tag de l’image Docker'
    required: true
  ecr-registry:
    description: 'Le registre ECR dans lequel pousser l’image'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Définir le nom de l'image Docker
      shell: bash
      run: |
        echo "ECR Registry: ${{ inputs.ecr-registry }}"
        echo "Image Prefix: ${{ inputs.image-prefix }}"
        echo "Image Short Name: ${{ inputs.image-short-name }}"
        echo "Image Tag: ${{ inputs.image-tag }}"

        # Générer l'image complète
        export IMAGENAME="${{ inputs.ecr-registry }}/${{ inputs.image-prefix }}-${{ inputs.image-short-name }}:${{ inputs.image-tag }}"
        echo "Generated IMAGENAME: $IMAGENAME"

        # Vérifier que IMAGENAME n'est pas vide ou invalide
        if [ -z "$IMAGENAME" ]; then
          echo "IMAGENAME is empty or invalid. Exiting..."
          exit 1
        fi

        # Construire l'image Docker
        docker build --build-arg SPRING_PROFILE_ARG=${{ inputs.spring-profile }} -f ${{ inputs.dockerfile }} -t $IMAGENAME .

        # Vérification si la construction a échoué
        if [ $? -ne 0 ]; then
          echo "Docker build failed. Please check the Dockerfile and context path."
          exit 1
        fi

        # Taguer et pousser l'image Docker
        docker tag $IMAGENAME $IMAGENAME:latest
        docker push $IMAGENAME
        docker push $IMAGENAME:latest

        # Exporter l'URI de l'image
        echo "image-uri=${IMAGENAME}" >> $GITHUB_ENV
