name: 'Publish Spring Boot Docker Image'
description: 'Build and push Docker image for Spring Boot app'

inputs:
  spring-profile:
    description: 'Spring profile to be used (e.g., dev, prod)'
    required: true
  published-app:
    description: 'Path to the Spring Boot JAR or WAR file'
    required: true
  dockerfile:
    description: 'Path to the Dockerfile'
    required: true
  image-short-name:
    description: 'Short name for the Docker image'
    required: true
  image-prefix:
    description: 'Prefix for the image name'
    required: true
  image-tag:
    description: 'Tag for the image'
    required: true
  ecr-registry:
    description: 'ECR registry URL'
    required: true

outputs:
  image-uri:
    description: 'URI of the pushed Docker image'

runs:
  using: "composite"
  steps:
    - name: Debug Input Values
      run: |
        echo "ECR Registry: ${{ inputs.ecr-registry }}"
        echo "Image Prefix: ${{ inputs.image-prefix }}"
        echo "Image Short Name: ${{ inputs.image-short-name }}"
        echo "Image Tag: ${{ inputs.image-tag }}"
      shell: bash

    - name: Define and Debug IMAGENAME
      run: |
        # Define the image name correctly
        export IMAGENAME="${{ inputs.ecr-registry }}/${{ inputs.image-prefix }}-${{ inputs.image-short-name }}:${{ inputs.image-tag }}"
        echo "Generated IMAGENAME: $IMAGENAME"
        
        # Verifier que IMAGENAME est correctement formé
        if [ -z "$IMAGENAME" ]; then
          echo "IMAGENAME is empty or invalid. Exiting..."
          exit 1
        fi
      shell: bash

    - name: Build and Push Docker Image
      run: |
        # Afficher IMAGENAME pour le débogage
        echo "IMAGENAME: $IMAGENAME"

        # Build the Docker image
        docker build --build-arg SPRING_PROFILE_ARG=${{ inputs.spring-profile }} -f ${{ inputs.dockerfile }} -t $IMAGENAME .

        # Tag and push the Docker image
        docker tag $IMAGENAME $IMAGENAME:latest
        docker push $IMAGENAME
        docker push $IMAGENAME:latest

        # Output the image URI
        echo "image-uri=${IMAGENAME}" >> $GITHUB_ENV
      shell: bash
