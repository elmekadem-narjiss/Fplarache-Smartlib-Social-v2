name: 'Publish Spring Boot Docker Image'
description: 'Build and push Docker image for a Spring Boot application'

inputs:
  spring-profile:
    description: 'Profil Spring actif (ex. dev, prod, staging)'
    required: true
  published-app:
    description: 'Chemin vers le fichier JAR généré par Spring Boot'
    required: true
  dockerfile:
    description: 'Chemin vers le fichier Dockerfile'
    required: true
  image-short-name:
    description: 'Nom court de l’image Docker (par exemple, social-service-api)'
    required: true
  image-prefix:
    description: 'Préfixe pour l’image Docker (par exemple, nom du projet ou du service)'
    required: true
  image-tag:
    description: 'Tag de l’image Docker (par exemple, latest ou numéro de version)'
    required: true
  ecr-registry:
    description: 'URL du registre Docker (ECR, Docker Hub, etc.)'
    required: true

outputs:
  image-uri:
    description: 'URI complète de l’image Docker poussée'

runs:
  using: "composite"
  steps:
    - name: Build and Push Docker Image
      shell: bash
      run: |
        export IMAGENAME=${{ inputs.ecr-registry }}/${{ inputs.image-prefix }}-${{ inputs.image-short-name }}

        # Construction de l’image Docker
        docker build --build-arg SPRING_PROFILE_ARG=${{ inputs.spring-profile }} -f ${{ inputs.dockerfile }} -t $IMAGENAME:${{ inputs.image-tag }} .

        # Taguer et pousser l’image Docker
        docker image tag $IMAGENAME:${{ inputs.image-tag }} $IMAGENAME:latest
        docker push $IMAGENAME:${{ inputs.image-tag }}
        docker push $IMAGENAME:latest

        # Exporter l’URI de l’image
        echo "image-uri=${IMAGENAME}:latest" >> $GITHUB_ENV
